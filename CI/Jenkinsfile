pipeline {
    agent { label "gcp-hodor-slave-generic"}
    options {
       // Add timestamps to output.
       timestamps()
       timeout(time: 45, unit: 'MINUTES')
    }
    environment {
        TEST = "test"
        PR_ID = "pr-${env.CHANGE_ID}"
    }
    stages {
        stage('Build') {
            agent {
                docker {
                    image 'node:16.20.2'
                    reuseNode true
                }
            }
            environment {
                ANTORA_CACHE_DIR="${WORKSPACE}/.cache"
            }
            steps {
                script {
                    sh label:"Listing current directory", script:
                    """
                        ls -la
                    """
                    sh label:"Install node modules", script:
                    """
                        yarn
                    """
                    sh label:"Generate site", script:
                    """
                        yarn generate
                    """
                    sh label:"Copy artifacts", script:
                    """
                        mkdir ${PR_ID}
                        cp -r ./public_html/* ${PR_ID}
                    """
                    stash includes: "${PR_ID}/**/*", name: 'artifact'
                }
            }
        }
        stage('Publish') {
            steps {
                script {
                    def prId = env.CHANGE_ID
                    println "Pull Request ID: ${PR_ID}"
                    sh label:"Checkout gh-pages", script:
                    """
                        git fetch origin gh-pages:gh-pages
                        git checkout gh-pages
                    """
                    unstash 'artifact'
                    sh label:"Remove PR folder if exist", script:
                    """
                        pwd
                        ls -la
                        ls -la ${PR_ID}
                    """
                }
            }
        }
    }
    post {
        cleanup {
            deleteDir()
        }
    }
}
